n_years <- 10
units <- paste0("state", 1:n_units)
years <- 2000 + 0:(n_years - 1)
# Simulate unit-level data
sim_data_with_controls <- expand.grid(state = units, Year = years)
sim_data_with_controls <- sim_data_with_controls[order(sim_data_with_controls$state,
sim_data_with_controls$Year), ]
# Half treated, half control
treated_units <- sample(units, n_units / 2)
sim_data_with_controls$treated <- sim_data_with_controls$state %in% treated_units
# Assign adoption year only to treated units
sim_data_with_controls$adopt_year <- ifelse(sim_data_with_controls$treated,
sample(2003:2006, length(treated_units), replace = TRUE)[
match(sim_data_with_controls$state[sim_data_with_controls$treated], treated_units)
],
NA)
# Time to treatment
sim_data_with_controls$time_to_treat <- sim_data_with_controls$Year - sim_data_with_controls$adopt_year
# Simulate covariates and outcome
sim_data_with_controls$covariate1 <- rnorm(nrow(sim_data_with_controls))
sim_data_with_controls$covariate2 <- rnorm(nrow(sim_data_with_controls))
# Simulate true untreated outcome
sim_data_with_controls$y0 <- with(sim_data_with_controls,
0.5 * covariate1 - 0.3 * covariate2 + 0.05 * (Year - 2000) +
rnorm(nrow(sim_data_with_controls), sd = 0.2)
)
# Add treatment effect after adoption for treated units
sim_data_with_controls$ln_age_mort_rate <- sim_data_with_controls$y0 +
ifelse(sim_data_with_controls$treated &
!is.na(sim_data_with_controls$adopt_year) &
sim_data_with_controls$Year > sim_data_with_controls$adopt_year,
0.25, 0)
# Inspect
head(sim_data_with_controls)
devtools::load_all()
## Run once with full:
res_full <- estimate_fat(
data = sim_data, unit_var = "state", time_var = "Year",
outcome_var = "ln_age_mort_rate", treat_time_var = "adopt_year",
degrees = 0:2, horizons = 1:3,
beta_estimator = "none",
forecast_lag = 0,
pretreatment_window = "full"
)
## And once with minimal:
res_min  <- estimate_fat(
data = sim_data, unit_var = "state", time_var = "Year",
outcome_var = "ln_age_mort_rate", treat_time_var = "adopt_year",
degrees = 0:2, horizons = 1:3,
beta_estimator = "none",
forecast_lag = 0,
pretreatment_window = "minimal"
)
### Checks for pretreatment periods:
check_full <- res_full$predictions |>
dplyr::group_by(state, deg) |>
dplyr::summarise(n_pre_fit = dplyr::first(n_pre_fit),
years_used = dplyr::first(pre_years_used),
.groups = "drop")
check_min <- res_min$predictions |>
dplyr::group_by(state, deg) |>
dplyr::summarise(n_pre_fit = dplyr::first(n_pre_fit),
years_used = dplyr::first(pre_years_used),
.groups = "drop")
View(check_full)
View(check_min)
# with OLS:
res_pooled <- estimate_fat(
data = sim_data,
unit_var = "state",
time_var = "Year",
outcome_var = "ln_age_mort_rate",
treat_time_var = "adopt_year",
degrees = 0:2,
horizons = 1:3,
beta_estimator = "ols",
covariate_vars = c("covariate1", "covariate2"),  # replace with your covariates
forecast_lag = 0,
pretreatment_window = "minimal"
)
# with IV:
res_iv <- estimate_fat(
data = sim_data,
unit_var = "state",
time_var = "Year",
outcome_var = "ln_age_mort_rate",
treat_time_var = "adopt_year",
degrees = 0:2,
horizons = 1:3,
beta_estimator = "iv",
covariate_vars = c("covariate1", "covariate2"),  # replace with your covariates
min_iv_lag = 2,
max_iv_lag = 2,
forecast_lag = 0,
pretreatment_window = "minimal"
)
# ----------------------------------------------- #
# with heterogeneous trend:
res_unitwise <- estimate_fat(
data = sim_data,
unit_var = "state",
time_var = "Year",
outcome_var = "ln_age_mort_rate",
treat_time_var = "adopt_year",
degrees = 1,
horizons = 1:3,
beta_estimator = "unitwise",
covariate_vars = c("covariate1","covariate2"),
pretreatment_window = "full",
forecast_lag = 0
)
# spot-check: for a given unit, refit the same pre model and look at coef
u <- "state7"
tmp <- sim_data[sim_data$state==u,]
tmp$timeToTreat <- tmp$Year - tmp$adopt_year
pre_tmp <- subset(tmp, timeToTreat < 0)
pre_tmp$ttreat1 <- pre_tmp$timeToTreat
summary(lm(ln_age_mort_rate ~ ttreat1 + covariate1 + covariate2, data = pre_tmp))
## compare pooled and unitwise for the same unit:
res_pooled <- estimate_fat(
data = sim_data,
unit_var = "state",
time_var = "Year",
outcome_var = "ln_age_mort_rate",
treat_time_var = "adopt_year",
degrees = 1,
horizons = 1:3,
beta_estimator = "ols",
covariate_vars = c("covariate1","covariate2"),
pretreatment_window = "full",
forecast_lag = 0
)
### Merge preds for one unit & degree=1, hh=1
p1 <- res_pooled$predictions %>% filter(state==u, deg==1, hh==1)
u1 <- res_unitwise$predictions %>% filter(state==u, deg==1, hh==1)
left_join(p1, u1, by=c("state","Year"), suffix=c("_pooled","_unitwise")) %>%
select(state, Year, preds_pooled = preds_pooled, preds_unitwise = preds_unitwise)
# ----------------------------------------------- #
# with DFAT:
results_dfat <- estimate_fat(
data = sim_data_with_controls,
unit_var = "state",
time_var = "Year",
outcome_var = "ln_age_mort_rate",
treat_time_var = "adopt_year",
degrees = 0:2,
horizons = 1:3,
beta_estimator = "none",
control_group_value = FALSE,   # assumes treated == TRUE/FALSE in your data
forecast_lag = 0,
pretreatment_window = "minimal"
)
pred <- res_none$predictions  # ← pick any results object
pred <- res_min$predictions  # ← pick any results object
# A. uniqueness of keys (no duplicates)
pred %>%
count(state, Year, deg, hh) %>%
filter(n > 1)
# B. hh labeling == max(0, timeToTreat - forecast_lag + 1)
# (If you used forecast_lag ≠ 0, set it here)
forecast_lag <- 0
pred %>%
mutate(hh_check = if_else(timeToTreat >= forecast_lag,
timeToTreat - forecast_lag + 1L, 0L)) %>%
summarise(all_ok = all(hh == hh_check))
head(res_min$predictions)
head(res_min$predictions, 20)
tet <- res_min$predictions %>% filter(res_min$preictions, state = "state1")
tet <- res_min$predictions %>% filter(res_min$preictions, state == "state1")
tet <- res_min$predictions %>% filter(state == "state1")
View(tet)
View(pred)
forecast_lag <- 0
pred %>%
filter(preds != NA) %>%
mutate(hh_check = if_else(timeToTreat >= forecast_lag,
timeToTreat - forecast_lag + 1L, 0L)) %>%
summarise(all_ok = all(hh == hh_check))
# expect TRUE
pred %>%
group_by(state, deg, hh) %>%
summarise(
any_pred_pre  = any(!is.na(preds) & timeToTreat <  forecast_lag),
any_pred_post = any(!is.na(preds) & timeToTreat >  forecast_lag + hh - 1),
.groups = "drop"
)
# Recompute FAT: mean( y - preds ) over rows with hh == h
fat_recomp <- pred %>%
filter(hh > 0) %>%
group_by(deg, hh) %>%
summarise(FAT_hat = mean(ln_age_mort_rate - preds, na.rm = TRUE),
.groups="drop")
res_tbl <- res_none$results %>% select(deg, hh, FAT)
fat_recomp <- pred %>%
filter(hh > 0) %>%
group_by(deg, hh) %>%
summarise(FAT_hat = mean(ln_age_mort_rate - preds, na.rm = TRUE),
.groups="drop")
res_tbl <- res_min$results %>% select(deg, hh, FAT)
left_join(res_tbl, fat_recomp, by = c("deg","hh")) %>%
mutate(diff = FAT - FAT_hat)
p_pooled <- res_pooled$predictions %>%
filter(state == unit_pick, deg == deg_pick, hh == hh_pick) %>%
select(state, Year, preds_pooled = preds)
deg_pick <- 2; hh_pick <- 3; unit_pick <- "state7"
p_pooled <- res_pooled$predictions %>%
filter(state == unit_pick, deg == deg_pick, hh == hh_pick) %>%
select(state, Year, preds_pooled = preds)
p_unit <- res_unitwise$predictions %>%
filter(state == unit_pick, deg == deg_pick, hh == hh_pick) %>%
select(state, Year, preds_unitwise = preds)
cmp <- left_join(p_pooled, p_unit, by = c("state","Year")) %>%
mutate(abs_diff = abs(preds_pooled - preds_unitwise)) %>%
arrange(Year)
cmp
summarise(cmp, max_abs_diff = max(abs_diff, na.rm = TRUE))
p_pooled <- res_pooled$predictions %>%
filter(state == unit_pick, deg == deg_pick, hh == hh_pick) %>%
select(state, Year, preds_pooled = preds)
p_unit <- res_unitwise$predictions %>%
filter(state == unit_pick, deg == deg_pick, hh == hh_pick) %>%
select(state, Year, preds_unitwise = preds)
cmp <- left_join(p_pooled, p_unit, by = c("state","Year")) %>%
mutate(abs_diff = abs(preds_pooled - preds_unitwise)) %>%
arrange(Year)
cmp
summarise(cmp, max_abs_diff = max(abs_diff, na.rm = TRUE))
View(cmp)
cmp <- left_join(p_pooled, p_unit, by = c("state","Year"))
p_unit <- res_unitwise$predictions %>%
filter(state == unit_pick, deg == deg_pick, hh == hh_pick) %>%
select(state, Year, preds_unitwise = preds)
deg_pick <- 2; hh_pick <- 1; unit_pick <- "state7"
p_pooled <- res_pooled$predictions %>%
filter(state == unit_pick, deg == deg_pick, hh == hh_pick) %>%
select(state, Year, preds_pooled = preds)
p_unit <- res_unitwise$predictions %>%
filter(state == unit_pick, deg == deg_pick, hh == hh_pick) %>%
select(state, Year, preds_unitwise = preds)
cmp <- left_join(p_pooled, p_unit, by = c("state","Year")) %>%
mutate(abs_diff = abs(preds_pooled - preds_unitwise)) %>%
arrange(Year)
p_pooled <- res_pooled$predictions %>%
filter(state == unit_pick, deg == deg_pick, hh == hh_pick) %>%
select(state, Year, preds_pooled = preds)
p_pooled <- res_pooled$predictions %>%
filter(state == "state7", deg == 2, hh == 1) %>%
select(state, Year, preds_pooled = preds)
p_pooled <- res_pooled$predictions %>%
filter(state == "state7", deg == 1, hh == 1) %>%
select(state, Year, preds_pooled = preds)
p_pooled <- res_pooled$predictions %>%
filter(state == "state7")
p_pooled <- res_pooled$predictions %>%
filter(state == "state7", deg == 1)
p_pooled <- res_pooled$predictions %>%
filter(state == "state7", deg == 1, hh == 1)
p_pooled <- res_pooled$predictions %>%
filter(state == "state7", deg == 1, hh == 1) %>%
select(state, Year, preds)
p_pooled <- res_pooled$predictions %>%
filter(state == "state7", deg == 1, hh == 1) %>%
rename(preds == preds_pooled) %>%
select(state, Year, preds_pooled)
p_pooled <- res_pooled$predictions %>%
filter(state == "state7", deg == 1, hh == 1) %>%
rename(preds == preds_pooled) %>%
select(state, Year, preds_pooled)
p_pooled <- res_pooled$predictions %>%
filter(state == "state7", deg == 1, hh == 1) %>%
select(state, Year, preds)
p_pooled <- res_pooled$predictions %>%
filter(state == "state7", deg == 1, hh == 1) %>%
select(state, Year, preds) %>% rename(preds == preds_pooled)
p_pooled <- res_pooled$predictions %>%
filter(state == "state7", deg == 1, hh == 1) %>%
select(state, Year, preds) %>% rename("preds" == preds_pooled)
p_pooled <- res_pooled$predictions %>%
filter(state == "state7", deg == 1, hh == 1) %>%
select(state, Year, preds) %>% rename("preds" == "preds_pooled")
p_pooled <- res_pooled$predictions %>%
filter(state == "state7", deg == 1, hh == 1) %>%
select(state, Year, preds) %>% rename(preds_pooled == preds)
p_pooled <- res_pooled$predictions %>%
filter(state == "state7", deg == 1, hh == 1) %>%
select(state, Year, preds)
p_pooled <- res_pooled$predictions %>%
filter(state == "state7", deg == 1, hh == 1) %>%
select(state, Year, preds = preds_pooled)
p_pooled <- res_pooled$predictions %>%
filter(state == "state7", deg == 1, hh == 1) %>%
select(state, Year, preds_pooled = preds)
p_pooled <- res_pooled$predictions %>%
filter(state == unit_pick, deg == deg_pick, hh == hh_pick) %>%
select(state, Year, preds_pooled = preds)
p_pooled <- res_pooled$predictions %>%
filter(state == "state7", deg == 1, hh == 1) %>%
select(state, Year, preds_pooled = preds)
deg_pick <- 2; hh_pick <- 1; unit_pick <- "state7"
p_pooled <- res_pooled$predictions %>%
filter(state == unit_pick, deg == deg_pick, hh == hh_pick) %>%
select(state, Year, preds_pooled = preds)
p_pooled <- res_pooled$predictions %>%
filter(state == "state7", deg == deg_pick, hh == hh_pick) %>%
select(state, Year, preds_pooled = preds)
p_pooled <- res_pooled$predictions %>%
filter(state == "state7", deg == 2, hh == 1) %>%
select(state, Year, preds_pooled = preds)
p_pooled <- res_pooled$predictions %>%
filter(state == "state7", deg == 1, hh == 1) %>%
select(state, Year, preds_pooled = preds)
p_pooled <- res_pooled$predictions %>%
filter(state == "state7", deg == 1, hh == 1) %>%
select(state, Year, preds_pooled = preds)
p_pooled <- res_pooled$predictions %>%
filter(state == unit_pick, deg == deg_pick, hh == hh_pick) %>%
select(state, Year, preds_pooled = preds)
p_pooled <- res_pooled$predictions %>%
filter(state == "state7", deg == 1, hh == 1) %>%
select(state, Year, preds_pooled = preds)
p_pooled <- res_pooled$predictions %>%
filter(state == "state7", deg == 1, hh == 1) %>%
select(state, Year, preds_pooled = preds)
p_pooled <- res_pooled$predictions %>%
filter(state == "state7", deg == deg_pick, hh == 1) %>%
select(state, Year, preds_pooled = preds)
deg_pick <- 1
# Same spec (deg/hh) and unit, compare predicted values
deg_pick <- 1; hh_pick <- 1; unit_pick <- "state7"
p_pooled <- res_pooled$predictions %>%
filter(state == unit_pick, deg == deg_pick, hh == hh_pick) %>%
select(state, Year, preds_pooled = preds)
p_unit <- res_unitwise$predictions %>%
filter(state == unit_pick, deg == deg_pick, hh == hh_pick) %>%
select(state, Year, preds_unitwise = preds)
res_pooled <- estimate_fat(
data = sim_data,
unit_var = "state",
time_var = "Year",
outcome_var = "ln_age_mort_rate",
treat_time_var = "adopt_year",
degrees = 1:3,
horizons = 1:3,
beta_estimator = "ols",
covariate_vars = c("covariate1","covariate2"),
pretreatment_window = "full",
forecast_lag = 0
)
# with heterogeneous trend:
res_unitwise <- estimate_fat(
data = sim_data,
unit_var = "state",
time_var = "Year",
outcome_var = "ln_age_mort_rate",
treat_time_var = "adopt_year",
degrees = 1:3,
horizons = 1:3,
beta_estimator = "unitwise",
covariate_vars = c("covariate1","covariate2"),
pretreatment_window = "full",
forecast_lag = 0
)
warnings()
res_unitwise <- estimate_fat(
data = sim_data,
unit_var = "state",
time_var = "Year",
outcome_var = "ln_age_mort_rate",
treat_time_var = "adopt_year",
degrees = 1:2,
horizons = 1:3,
beta_estimator = "unitwise",
covariate_vars = c("covariate1","covariate2"),
pretreatment_window = "full",
forecast_lag = 0
)
warnings()
fat_recomp <- pred %>%
filter(hh > 0) %>%
group_by(deg, hh) %>%
summarise(FAT_hat = mean(ln_age_mort_rate - preds, na.rm = TRUE),
.groups="drop")
res_tbl <- res_min$results %>% select(deg, hh, FAT)
left_join(res_tbl, fat_recomp, by = c("deg","hh")) %>%
mutate(diff = FAT - FAT_hat)
deg_pick <- 1; hh_pick <- 1; unit_pick <- "state7"
p_pooled <- res_pooled$predictions %>%
filter(state == unit_pick, deg == deg_pick, hh == hh_pick) %>%
select(state, Year, preds_pooled = preds)
p_unit <- res_unitwise$predictions %>%
filter(state == unit_pick, deg == deg_pick, hh == hh_pick) %>%
select(state, Year, preds_unitwise = preds)
cmp <- left_join(p_pooled, p_unit, by = c("state","Year")) %>%
mutate(abs_diff = abs(preds_pooled - preds_unitwise)) %>%
arrange(Year)
cmp
summarise(cmp, max_abs_diff = max(abs_diff, na.rm = TRUE))
# max_abs_diff should be > 0 if the covariate effects differ
results_dfat <- estimate_fat(
data = sim_data_with_controls,
unit_var = "state",
time_var = "Year",
outcome_var = "ln_age_mort_rate",
treat_time_var = "adopt_year",
degrees = 0:2,
horizons = 1:3,
beta_estimator = "none",
control_group_value = FALSE,   # assumes treated == TRUE/FALSE in your data
forecast_lag = 0,
pretreatment_window = "minimal"
)
results_dfat <- estimate_fat(
data = sim_data_with_controls,
unit_var = "state",
time_var = "Year",
outcome_var = "ln_age_mort_rate",
treat_time_var = "adopt_year",
degrees = 0:2,
horizons = 1:3,
beta_estimator = "none",
control_group_value = FALSE,   # assumes treated == TRUE/FALSE in your data
forecast_lag = 0,
pretreatment_window = "full"
)
res_dfat <- estimate_fat(
data = sim_data_with_controls,
unit_var = "state",
time_var = "Year",
outcome_var = "ln_age_mort_rate",
treat_time_var = "adopt_year",
degrees = 0:2,
horizons = 1:3,
beta_estimator = "none",
control_group_value = FALSE,   # assumes treated == TRUE/FALSE in your data
forecast_lag = 0,
pretreatment_window = "full"
)
res_dfat <- estimate_fat(
data = sim_data_with_controls,
unit_var = "state",
time_var = "Year",
outcome_var = "ln_age_mort_rate",
treat_time_var = "adopt_year",
degrees = 0:2,
horizons = 1:3,
beta_estimator = "none",
control_group_value = FALSE,   # assumes treated == TRUE/FALSE in your data
forecast_lag = 0,
pretreatment_window = "minimal"
)
pred_d <- res_dfat$predictions
res_d  <- res_dfat$results
# Sanity: each horizon has treated & control rows
pred_d %>%
filter(hh > 0) %>%
group_by(deg, hh) %>%
summarise(n_treat = sum(treated == TRUE, na.rm = TRUE),
n_ctrl  = sum(treated == FALSE, na.rm = TRUE),
.groups="drop")
dfat_recomp <- pred_d %>%
filter(hh > 0) %>%
mutate(diff = ln_age_mort_rate - preds) %>%
group_by(deg, hh) %>%
summarise(
treat = mean(diff[treated == TRUE],  na.rm = TRUE),
ctrl  = mean(diff[treated == FALSE], na.rm = TRUE),
DFAT_hat = treat - ctrl,
.groups="drop"
)
left_join(res_d, dfat_recomp, by = c("deg","hh")) %>%
mutate(diff = FAT - DFAT_hat)
check_newdata <- res_pooled$predictions %>%
select(any_of(c("covariate1","covariate2"))) %>%
head(1)
View(check_newdata)
pred %>%
filter(state == "state7", deg == 2) %>%
mutate(period = if_else(timeToTreat < 0, "pre", "post")) %>%
ggplot(aes(Year, ln_age_mort_rate)) +
geom_point() +
geom_line() +
geom_point(aes(y = preds, shape = factor(hh)), na.rm = TRUE) +
labs(title = "Observed vs forecasts (state7, deg=2)",
shape = "hh") +
theme_minimal()
pred %>%
filter(state == "state7", deg == 1) %>%
mutate(period = if_else(timeToTreat < 0, "pre", "post")) %>%
ggplot(aes(Year, ln_age_mort_rate)) +
geom_point() +
geom_line() +
geom_point(aes(y = preds, shape = factor(hh)), na.rm = TRUE) +
labs(title = "Observed vs forecasts (state7, deg=2)",
shape = "hh") +
theme_minimal()
plot_fat_dfat_trajectories(predictions_df = res_min$predictions, mode = "fat")
res_dfat <- estimate_fat(
data = sim_data_with_controls,
unit_var = "state",
time_var = "Year",
outcome_var = "ln_age_mort_rate",
treat_time_var = "adopt_year",
degrees = 0:2,
horizons = 1:3,
beta_estimator = "none",
control_group_value = FALSE,   # assumes treated == TRUE/FALSE in your data
forecast_lag = 1,
pretreatment_window = "full"
)
plot_fat_dfat_trajectories(predictions_df = res_min$predictions, mode = "fat")
head(res_dfat$predictions, 15)
plot_fat_dfat_trajectories(predictions_df = res_dfat$predictions, mode = "dfat")
